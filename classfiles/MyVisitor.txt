Classfile /C:/Users/Steve/IdeaProjects/MiniJavaCompiler/classfiles/MyVisitor.class
  Last modified Dec 5, 2016; size 628 bytes
  MD5 checksum 7e2d066c8fb84068ee130d6458eda438
public class MyVisitor extends Visitor
  minor version: 3
  major version: 45
  flags: ACC_PUBLIC
Constant pool:
   #1 = Utf8               MyVisitor
   #2 = Class              #1             // MyVisitor
   #3 = Utf8               Visitor
   #4 = Class              #3             // Visitor
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = NameAndType        #5:#6          // "<init>":()V
   #8 = Methodref          #4.#7          // Visitor."<init>":()V
   #9 = Utf8               visit
  #10 = Utf8               (LTree;)I
  #11 = Utf8               Tree
  #12 = Class              #11            // Tree
  #13 = Utf8               GetHas_Right
  #14 = Utf8               ()Z
  #15 = NameAndType        #13:#14        // GetHas_Right:()Z
  #16 = Methodref          #12.#15        // Tree.GetHas_Right:()Z
  #17 = Utf8               GetRight
  #18 = Utf8               ()LTree;
  #19 = NameAndType        #17:#18        // GetRight:()LTree;
  #20 = Methodref          #12.#19        // Tree.GetRight:()LTree;
  #21 = Utf8               r
  #22 = Utf8               LTree;
  #23 = NameAndType        #21:#22        // r:LTree;
  #24 = Fieldref           #2.#23         // MyVisitor.r:LTree;
  #25 = Utf8               accept
  #26 = Utf8               (LVisitor;)I
  #27 = NameAndType        #25:#26        // accept:(LVisitor;)I
  #28 = Methodref          #12.#27        // Tree.accept:(LVisitor;)I
  #29 = Utf8               java/lang/System
  #30 = Class              #29            // java/lang/System
  #31 = Utf8               out
  #32 = Utf8               Ljava/io/PrintStream;
  #33 = NameAndType        #31:#32        // out:Ljava/io/PrintStream;
  #34 = Fieldref           #30.#33        // java/lang/System.out:Ljava/io/PrintStream;
  #35 = Utf8               GetKey
  #36 = Utf8               ()I
  #37 = NameAndType        #35:#36        // GetKey:()I
  #38 = Methodref          #12.#37        // Tree.GetKey:()I
  #39 = Utf8               java/io/PrintStream
  #40 = Class              #39            // java/io/PrintStream
  #41 = Utf8               println
  #42 = Utf8               (I)V
  #43 = NameAndType        #41:#42        // println:(I)V
  #44 = Methodref          #40.#43        // java/io/PrintStream.println:(I)V
  #45 = Utf8               GetHas_Left
  #46 = NameAndType        #45:#14        // GetHas_Left:()Z
  #47 = Methodref          #12.#46        // Tree.GetHas_Left:()Z
  #48 = Utf8               GetLeft
  #49 = NameAndType        #48:#18        // GetLeft:()LTree;
  #50 = Methodref          #12.#49        // Tree.GetLeft:()LTree;
  #51 = Utf8               l
  #52 = NameAndType        #51:#22        // l:LTree;
  #53 = Fieldref           #2.#52         // MyVisitor.l:LTree;
  #54 = Utf8               Code
  #55 = Utf8               StackMap
{
  public MyVisitor();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method Visitor."<init>":()V
         4: return

  public int visit(Tree);
    descriptor: (LTree;)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #16                 // Method Tree.GetHas_Right:()Z
         4: ifeq          27
         7: aload_0
         8: aload_1
         9: invokevirtual #20                 // Method Tree.GetRight:()LTree;
        12: putfield      #24                 // Field r:LTree;
        15: aload_0
        16: getfield      #24                 // Field r:LTree;
        19: aload_0
        20: invokevirtual #28                 // Method Tree.accept:(LVisitor;)I
        23: istore_2
        24: goto          29
        27: iconst_0
        28: istore_2
        29: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
        32: aload_1
        33: invokevirtual #38                 // Method Tree.GetKey:()I
        36: invokevirtual #44                 // Method java/io/PrintStream.println:(I)V
        39: aload_1
        40: invokevirtual #47                 // Method Tree.GetHas_Left:()Z
        43: ifeq          66
        46: aload_0
        47: aload_1
        48: invokevirtual #50                 // Method Tree.GetLeft:()LTree;
        51: putfield      #53                 // Field l:LTree;
        54: aload_0
        55: getfield      #53                 // Field l:LTree;
        58: aload_0
        59: invokevirtual #28                 // Method Tree.accept:(LVisitor;)I
        62: istore_2
        63: goto          68
        66: iconst_0
        67: istore_2
        68: iconst_0
        69: ireturn
      StackMap: number_of_entries = 4
        frame_type = 255 offset = 27
          locals = [ class MyVisitor, class Tree ]
          stack = []
        frame_type = 255 offset = 29
          locals = [ class MyVisitor, class Tree, int ]
          stack = []
        frame_type = 255 offset = 66
          locals = [ class MyVisitor, class Tree, int ]
          stack = []
        frame_type = 255 offset = 68
          locals = [ class MyVisitor, class Tree, int ]
          stack = []
}
