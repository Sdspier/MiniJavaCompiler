Classfile /C:/Users/Steve/IdeaProjects/MiniJavaCompiler/classfiles/QS.class
  Last modified Dec 5, 2016; size 1386 bytes
  MD5 checksum d5454bf29c1bdfc6099adf30111a3fc0
public class QS
  minor version: 3
  major version: 45
  flags: ACC_PUBLIC
Constant pool:
   #1 = Utf8               QS
   #2 = Class              #1             // QS
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = NameAndType        #5:#6          // "<init>":()V
   #8 = Methodref          #4.#7          // java/lang/Object."<init>":()V
   #9 = Utf8               number
  #10 = Utf8               [I
  #11 = Utf8               size
  #12 = Utf8               I
  #13 = Utf8               Start
  #14 = Utf8               (I)I
  #15 = Utf8               Init
  #16 = NameAndType        #15:#14        // Init:(I)I
  #17 = Methodref          #2.#16         // QS.Init:(I)I
  #18 = Utf8               Print
  #19 = Utf8               ()I
  #20 = NameAndType        #18:#19        // Print:()I
  #21 = Methodref          #2.#20         // QS.Print:()I
  #22 = Utf8               java/lang/System
  #23 = Class              #22            // java/lang/System
  #24 = Utf8               out
  #25 = Utf8               Ljava/io/PrintStream;
  #26 = NameAndType        #24:#25        // out:Ljava/io/PrintStream;
  #27 = Fieldref           #23.#26        // java/lang/System.out:Ljava/io/PrintStream;
  #28 = Utf8               java/io/PrintStream
  #29 = Class              #28            // java/io/PrintStream
  #30 = Utf8               println
  #31 = Utf8               (I)V
  #32 = NameAndType        #30:#31        // println:(I)V
  #33 = Methodref          #29.#32        // java/io/PrintStream.println:(I)V
  #34 = NameAndType        #11:#12        // size:I
  #35 = Fieldref           #2.#34         // QS.size:I
  #36 = Utf8               Sort
  #37 = Utf8               (II)I
  #38 = NameAndType        #36:#37        // Sort:(II)I
  #39 = Methodref          #2.#38         // QS.Sort:(II)I
  #40 = NameAndType        #9:#10         // number:[I
  #41 = Fieldref           #2.#40         // QS.number:[I
  #42 = Utf8               Code
  #43 = Utf8               StackMap
{
  protected int[] number;
    descriptor: [I
    flags: ACC_PROTECTED

  protected int size;
    descriptor: I
    flags: ACC_PROTECTED

  public QS();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method java/lang/Object."<init>":()V
         4: return

  public int Start(int);
    descriptor: (I)I
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #17                 // Method Init:(I)I
         5: istore_2
         6: aload_0
         7: invokevirtual #21                 // Method Print:()I
        10: istore_2
        11: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        14: sipush        9999
        17: invokevirtual #33                 // Method java/io/PrintStream.println:(I)V
        20: aload_0
        21: getfield      #35                 // Field size:I
        24: iconst_1
        25: isub
        26: istore_2
        27: aload_0
        28: iconst_0
        29: iload_2
        30: invokevirtual #39                 // Method Sort:(II)I
        33: istore_2
        34: aload_0
        35: invokevirtual #21                 // Method Print:()I
        38: istore_2
        39: iconst_0
        40: ireturn

  public int Sort(int, int);
    descriptor: (II)I
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=3
         0: iconst_0
         1: istore        7
         3: iload_1
         4: iload_2
         5: if_icmplt     12
         8: iconst_0
         9: goto          13
        12: iconst_1
        13: ifeq          262
        16: aload_0
        17: getfield      #41                 // Field number:[I
        20: iload_2
        21: iaload
        22: istore_3
        23: iload_1
        24: iconst_1
        25: isub
        26: istore        4
        28: iload_2
        29: istore        5
        31: iconst_1
        32: istore        8
        34: iload         8
        36: ifeq          202
        39: iconst_1
        40: istore        9
        42: iload         9
        44: ifeq          90
        47: iload         4
        49: iconst_1
        50: iadd
        51: istore        4
        53: aload_0
        54: getfield      #41                 // Field number:[I
        57: iload         4
        59: iaload
        60: istore        10
        62: iload         10
        64: iload_3
        65: if_icmplt     72
        68: iconst_0
        69: goto          73
        72: iconst_1
        73: iconst_1
        74: ixor
        75: ifeq          84
        78: iconst_0
        79: istore        9
        81: goto          87
        84: iconst_1
        85: istore        9
        87: goto          42
        90: iconst_1
        91: istore        9
        93: iload         9
        95: ifeq          141
        98: iload         5
       100: iconst_1
       101: isub
       102: istore        5
       104: aload_0
       105: getfield      #41                 // Field number:[I
       108: iload         5
       110: iaload
       111: istore        10
       113: iload_3
       114: iload         10
       116: if_icmplt     123
       119: iconst_0
       120: goto          124
       123: iconst_1
       124: iconst_1
       125: ixor
       126: ifeq          135
       129: iconst_0
       130: istore        9
       132: goto          138
       135: iconst_1
       136: istore        9
       138: goto          93
       141: aload_0
       142: getfield      #41                 // Field number:[I
       145: iload         4
       147: iaload
       148: istore        7
       150: aload_0
       151: getfield      #41                 // Field number:[I
       154: iload         4
       156: aload_0
       157: getfield      #41                 // Field number:[I
       160: iload         5
       162: iaload
       163: iastore
       164: aload_0
       165: getfield      #41                 // Field number:[I
       168: iload         5
       170: iload         7
       172: iastore
       173: iload         5
       175: iload         4
       177: iconst_1
       178: iadd
       179: if_icmplt     186
       182: iconst_0
       183: goto          187
       186: iconst_1
       187: ifeq          196
       190: iconst_0
       191: istore        8
       193: goto          199
       196: iconst_1
       197: istore        8
       199: goto          34
       202: aload_0
       203: getfield      #41                 // Field number:[I
       206: iload         5
       208: aload_0
       209: getfield      #41                 // Field number:[I
       212: iload         4
       214: iaload
       215: iastore
       216: aload_0
       217: getfield      #41                 // Field number:[I
       220: iload         4
       222: aload_0
       223: getfield      #41                 // Field number:[I
       226: iload_2
       227: iaload
       228: iastore
       229: aload_0
       230: getfield      #41                 // Field number:[I
       233: iload_2
       234: iload         7
       236: iastore
       237: aload_0
       238: iload_1
       239: iload         4
       241: iconst_1
       242: isub
       243: invokevirtual #39                 // Method Sort:(II)I
       246: istore        6
       248: aload_0
       249: iload         4
       251: iconst_1
       252: iadd
       253: iload_2
       254: invokevirtual #39                 // Method Sort:(II)I
       257: istore        6
       259: goto          265
       262: iconst_0
       263: istore        6
       265: iconst_0
       266: ireturn
      StackMap: number_of_entries = 22
        frame_type = 255 offset = 12
          locals = [ class QS, int, int, top, top, top, top, int ]
          stack = []
        frame_type = 255 offset = 13
          locals = [ class QS, int, int, top, top, top, top, int ]
          stack = [ int ]
        frame_type = 255 offset = 34
          locals = [ class QS, int, int, int, int, int, top, int, int ]
          stack = []
        frame_type = 255 offset = 42
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 72
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = []
        frame_type = 255 offset = 73
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = [ int ]
        frame_type = 255 offset = 84
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = []
        frame_type = 255 offset = 87
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = []
        frame_type = 255 offset = 90
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 93
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 123
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = []
        frame_type = 255 offset = 124
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = [ int ]
        frame_type = 255 offset = 135
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = []
        frame_type = 255 offset = 138
          locals = [ class QS, int, int, int, int, int, top, int, int, int, int ]
          stack = []
        frame_type = 255 offset = 141
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 186
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 187
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = [ int ]
        frame_type = 255 offset = 196
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 199
          locals = [ class QS, int, int, int, int, int, top, int, int, int ]
          stack = []
        frame_type = 255 offset = 202
          locals = [ class QS, int, int, int, int, int, top, int, int ]
          stack = []
        frame_type = 255 offset = 262
          locals = [ class QS, int, int, top, top, top, top, int ]
          stack = []
        frame_type = 255 offset = 265
          locals = [ class QS, int, int, top, top, top, int, int ]
          stack = []

  public int Print();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: iconst_0
         1: istore_1
         2: iload_1
         3: aload_0
         4: getfield      #35                 // Field size:I
         7: if_icmplt     14
        10: iconst_0
        11: goto          15
        14: iconst_1
        15: ifeq          37
        18: getstatic     #27                 // Field java/lang/System.out:Ljava/io/PrintStream;
        21: aload_0
        22: getfield      #41                 // Field number:[I
        25: iload_1
        26: iaload
        27: invokevirtual #33                 // Method java/io/PrintStream.println:(I)V
        30: iload_1
        31: iconst_1
        32: iadd
        33: istore_1
        34: goto          2
        37: iconst_0
        38: ireturn
      StackMap: number_of_entries = 4
        frame_type = 255 offset = 2
          locals = [ class QS, int ]
          stack = []
        frame_type = 255 offset = 14
          locals = [ class QS, int ]
          stack = []
        frame_type = 255 offset = 15
          locals = [ class QS, int ]
          stack = [ int ]
        frame_type = 255 offset = 37
          locals = [ class QS, int ]
          stack = []

  public int Init(int);
    descriptor: (I)I
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #35                 // Field size:I
         5: aload_0
         6: iload_1
         7: newarray       int
         9: putfield      #41                 // Field number:[I
        12: aload_0
        13: getfield      #41                 // Field number:[I
        16: iconst_0
        17: bipush        20
        19: iastore
        20: aload_0
        21: getfield      #41                 // Field number:[I
        24: iconst_1
        25: bipush        7
        27: iastore
        28: aload_0
        29: getfield      #41                 // Field number:[I
        32: iconst_2
        33: bipush        12
        35: iastore
        36: aload_0
        37: getfield      #41                 // Field number:[I
        40: iconst_3
        41: bipush        18
        43: iastore
        44: aload_0
        45: getfield      #41                 // Field number:[I
        48: iconst_4
        49: iconst_2
        50: iastore
        51: aload_0
        52: getfield      #41                 // Field number:[I
        55: iconst_5
        56: bipush        11
        58: iastore
        59: aload_0
        60: getfield      #41                 // Field number:[I
        63: bipush        6
        65: bipush        6
        67: iastore
        68: aload_0
        69: getfield      #41                 // Field number:[I
        72: bipush        7
        74: bipush        9
        76: iastore
        77: aload_0
        78: getfield      #41                 // Field number:[I
        81: bipush        8
        83: bipush        19
        85: iastore
        86: aload_0
        87: getfield      #41                 // Field number:[I
        90: bipush        9
        92: iconst_5
        93: iastore
        94: iconst_0
        95: ireturn
}
